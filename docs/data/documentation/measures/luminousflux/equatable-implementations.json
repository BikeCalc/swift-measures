{"variants":[{"paths":["\/documentation\/measures\/luminousflux\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/Equatable-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"Measures"}],"role":"collectionGroup","title":"Equatable Implementations"},"hierarchy":{"paths":[["doc:\/\/Measures\/documentation\/Measures","doc:\/\/Measures\/documentation\/Measures\/LuminousFlux"]]},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/!=(_:_:)"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/isEqual(to:)","doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/isUnequal(to:)"],"generated":true}],"references":{"doc://Measures/documentation/Measures":{"role":"collection","title":"Measures","abstract":[{"type":"text","text":"A package containing a set of objects and protocols to create and convert units of measure, for the Swift programming language."}],"identifier":"doc:\/\/Measures\/documentation\/Measures","kind":"symbol","type":"topic","url":"\/documentation\/measures"},"doc://Measures/documentation/Measures/LuminousFlux":{"role":"symbol","title":"LuminousFlux","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LuminousFlux"}],"abstract":[{"type":"text","text":"A unit of measure for luminous flux."}],"identifier":"doc:\/\/Measures\/documentation\/Measures\/LuminousFlux","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LuminousFlux"}],"url":"\/documentation\/measures\/luminousflux"},"doc://Measures/documentation/Measures/LuminousFlux/isEqual(to:)":{"role":"symbol","title":"isEqual(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a boolean value indicating whether this value is equal to the specified value."}],"identifier":"doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/isEqual(to:)","kind":"symbol","type":"topic","url":"\/documentation\/measures\/luminousflux\/isequal(to:)"},"doc://Measures/documentation/Measures/LuminousFlux/isUnequal(to:)":{"role":"symbol","title":"isUnequal(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUnequal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a boolean value indicating whether this value is unequal to the specified value."}],"identifier":"doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/isUnequal(to:)","kind":"symbol","type":"topic","url":"\/documentation\/measures\/luminousflux\/isunequal(to:)"},"doc://Measures/documentation/Measures/LuminousFlux/!=(_:_:)":{"role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Measures\/documentation\/Measures\/LuminousFlux\/!=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/measures\/luminousflux\/!=(_:_:)"}}}